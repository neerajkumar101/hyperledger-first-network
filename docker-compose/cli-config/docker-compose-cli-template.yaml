# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

networks:
  testnet:

services:
  ca.leftorg1.created.com:
    image: hyperledger/fabric-ca:x86_64-1.0.1
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-leftorg1
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/tlsca.leftorg1.created.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA1_PRIVATE_KEY
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.leftorg1.created.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA1_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ../../artifacts/channel/crypto-config/peerOrganizations/leftorg1.created.com/ca/:/etc/hyperledger/fabric-ca-server-config/
    container_name: ca.leftorg1.created.com
    networks:
      - testnet

  ca.rightorg2.created.com:
    image: hyperledger/fabric-ca:x86_64-1.0.1
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-rightorg2
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/tlsca.rightorg2.created.com-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.rightorg2.created.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ../../artifacts/channel/crypto-config/peerOrganizations/rightorg2.created.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.rightorg2.created.com
    networks:
      - testnet

  orderer.created.com:
    extends:
      file:   ../base/docker-compose-base.yaml
      service: orderer.created.com
    container_name: orderer.created.com
    networks:
      - testnet

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:x86_64-1.0.1
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for created map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "7984:5984"
    networks:
      - testnet
  
  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:x86_64-1.0.1
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for created map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "8984:5984"
    networks:
      - testnet
  
  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb:x86_64-1.0.1
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for created map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "9984:5984"
    networks:
      - testnet

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb:x86_64-1.0.1
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for created map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "10984:5984"
    networks:
      - testnet
  
  peer0.leftorg1.created.com:
    container_name: peer0.leftorg1.created.com
    extends:
      file:  ../base/docker-compose-base.yaml
      service: peer0.leftorg1.created.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
    depends_on:
      - couchdb0
    networks:
      - testnet

  peer1.leftorg1.created.com:
    container_name: peer1.leftorg1.created.com
    extends:
      file:  ../base/docker-compose-base.yaml
      service: peer1.leftorg1.created.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
    depends_on:
      - couchdb1
    networks:
      - testnet

  peer0.rightorg2.created.com:
    container_name: peer0.rightorg2.created.com
    extends:
      file:  ../base/docker-compose-base.yaml
      service: peer0.rightorg2.created.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
    depends_on:
      - couchdb2
    networks:
      - testnet

  peer1.rightorg2.created.com:
    container_name: peer1.rightorg2.created.com
    extends:
      file:  ../base/docker-compose-base.yaml
      service: peer1.rightorg2.created.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
    depends_on:
      - couchdb3
    networks:
      - testnet

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:x86_64-1.0.1
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.leftorg1.created.com:7051
      - CORE_PEER_LOCALMSPID=LeftOrg1MSP
      - CORE_PEER_TLS_ENABLED=false
      # - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/leftorg1.created.com/peers/peer0.leftorg1.created.com/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/leftorg1.created.com/peers/peer0.leftorg1.created.com/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/leftorg1.created.com/peers/peer0.leftorg1.created.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/leftorg1.created.com/users/Admin@leftorg1.created.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash -c './scripts/script.sh ${CHANNEL_NAME}; sleep $TIMEOUT; '
    volumes:
        - /var/run/:/host/var/run/
        - ../../chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
        - ../../artifacts/channel/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ../../artifacts/channel/channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.created.com
      - peer0.leftorg1.created.com
      - peer1.leftorg1.created.com
      - peer0.rightorg2.created.com
      - peer1.rightorg2.created.com
    networks:
      - testnet

  couchdb:
    container_name: couchdb
    image: hyperledger/fabric-couchdb:x86_64-1.0.0
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - testnet